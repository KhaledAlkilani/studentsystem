#configuration
#This line specifies the Hibernate setting for generating or updating the database schema. When set to update, Hibernate will automatically create or update the database schema based on the entity classes and their annotations.
spring.jpa.hibernate.ddl-auto=update
#This line specifies the JDBC URL for the database connection. In this case, it is set to connect to a MySQL database running on localhost with the port number 3306 and the database name fullstack.
#JDBC stands for Java Database Connectivity, It is an API (Application Programming Interface) that provides a set of interfaces and classes for connecting Java applications to relational databases, and for executing SQL queries and database operations. The JDBC API enables developers to write database-independent code, as it provides a standard way to interact with different database management systems. By using JDBC, developers can write Java code to connect to a database, create database connections and execute SQL statements to read or update data in the database.
spring.datasource.url=jdbc:mysql://localhost:3306/fullstack
#This line specifies the database username to use for the database connection. In this case, it is set to root.
spring.datasource.username=root
#This line specifies the database password to use for the database connection. In this case, it is left blank, indicating that there is no password required.
spring.datasource.password=
# This line specifies the fully qualified name of the JDBC driver class to use for the database connection. In this case, it is set to use the MySQL Connector/J JDBC driver with the class name com.mysql.cj.jdbc.Driver. This driver class is required to be on the application's classpath in order to establish a connection to the MySQL database.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver